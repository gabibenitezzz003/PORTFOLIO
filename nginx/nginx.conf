# Configuraci√≥n Nginx para Portfolio Completo
# Proxy reverso para todos los servicios del portfolio

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Configuraci√≥n b√°sica
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Compresi√≥n
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=airflow:10m rate=5r/s;
    
    # Upstream servers con fallback
    upstream api_proyecto1 {
        server api-proyecto1:8001 max_fails=3 fail_timeout=30s;
    }
    
    upstream api_nlp_proyecto3 {
        server api-nlp-proyecto3:8003 max_fails=3 fail_timeout=30s;
    }
    
    upstream airflow_webserver {
        server airflow-webserver:8080 max_fails=3 fail_timeout=30s;
    }
    
    upstream api_recomendaciones_proyecto5 {
        server api-recomendaciones-proyecto5:8005 max_fails=3 fail_timeout=30s;
    }
    
    upstream mlflow {
        server mlflow:5000 max_fails=3 fail_timeout=30s;
    }
    
    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
    }
    
    upstream prometheus {
        server prometheus:9090 max_fails=3 fail_timeout=30s;
    }
    
    # Servidor principal
    server {
        listen 80;
        server_name localhost;
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # P√°gina principal del portfolio
        location / {
            return 200 '
            <!DOCTYPE html>
            <html>
            <head>
                <title>Portfolio Gabriel - GreenCode Software</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                    .container { max-width: 1200px; margin: 0 auto; background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                    h1 { color: #2c3e50; text-align: center; margin-bottom: 30px; }
                    .project { background: #ecf0f1; padding: 20px; margin: 20px 0; border-radius: 8px; border-left: 4px solid #3498db; }
                    .project h2 { color: #2c3e50; margin-top: 0; }
                    .project p { color: #7f8c8d; line-height: 1.6; }
                    .links { display: flex; flex-wrap: wrap; gap: 10px; margin-top: 15px; }
                    .link { background: #3498db; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; font-size: 14px; }
                    .link:hover { background: #2980b9; }
                    .tech { background: #e8f5e8; padding: 15px; margin: 20px 0; border-radius: 8px; }
                    .tech h3 { color: #27ae60; margin-top: 0; }
                    .tech-list { display: flex; flex-wrap: wrap; gap: 8px; }
                    .tech-item { background: #27ae60; color: white; padding: 4px 12px; border-radius: 20px; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>üöÄ Portfolio Gabriel - Desarrollador Python Backend</h1>
                    <p style="text-align: center; color: #7f8c8d; font-size: 18px; margin-bottom: 40px;">
                        Portfolio completo para GreenCode Software - Especializado en FastAPI, Pandas, NLP, Airflow y Machine Learning
                    </p>
                    
                    <div class="project">
                        <h2>üìä Proyecto 1: Sistema de Gesti√≥n de Datos</h2>
                        <p>API REST con FastAPI y PostgreSQL usando Arquitectura Hexagonal. Implementa Clean Code, POO, decoradores y principios SOLID.</p>
                        <div class="links">
                            <a href="/proyecto1/" class="link">API REST</a>
                            <a href="/proyecto1/docs" class="link">Documentaci√≥n</a>
                            <a href="/proyecto1/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>üîÑ Proyecto 2: Pipeline de Procesamiento de Datos</h2>
                        <p>Pipeline ETL completo con Pandas, an√°lisis estad√≠stico, visualizaciones interactivas y procesamiento de datos en tiempo real.</p>
                        <div class="links">
                            <a href="/proyecto2/" class="link">Dashboard</a>
                            <a href="/proyecto2/analisis" class="link">An√°lisis</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>üß† Proyecto 3: Sistema de NLP con spaCy</h2>
                        <p>Sistema completo de an√°lisis de sentimientos y extracci√≥n de entidades usando spaCy, NLTK y FastAPI.</p>
                        <div class="links">
                            <a href="/proyecto3/" class="link">API NLP</a>
                            <a href="/proyecto3/docs" class="link">Documentaci√≥n</a>
                            <a href="/proyecto3/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>‚öôÔ∏è Proyecto 4: Orquestaci√≥n con Apache Airflow</h2>
                        <p>Workflows complejos con DAGs, monitoreo en tiempo real, alertas inteligentes y escalabilidad horizontal.</p>
                        <div class="links">
                            <a href="/airflow/" class="link">Airflow UI</a>
                            <a href="/airflow/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>ü§ñ Proyecto 5: Sistema de Recomendaciones ML</h2>
                        <p>Sistema completo de recomendaciones con scikit-learn, TensorFlow, m√∫ltiples algoritmos y APIs REST.</p>
                        <div class="links">
                            <a href="/proyecto5/" class="link">API Recomendaciones</a>
                            <a href="/proyecto5/docs" class="link">Documentaci√≥n</a>
                            <a href="/proyecto5/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>‚òï Proyecto 6: Microservicios Java</h2>
                        <p>Arquitectura de microservicios con Spring Boot, Clean Architecture, Event Sourcing y CQRS.</p>
                        <div class="links">
                            <a href="http://localhost:8081/" class="link">API Microservicios</a>
                            <a href="http://localhost:8081/actuator/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>üìä Proyecto 7: Sistema de Observabilidad</h2>
                        <p>Monitoreo completo con Prometheus, Grafana, Jaeger y ELK Stack para observabilidad total.</p>
                        <div class="links">
                            <a href="http://localhost:3000/" class="link">Dashboard Observabilidad</a>
                            <a href="http://localhost:3000/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>üîÑ Proyecto 8: Pipeline CI/CD</h2>
                        <p>Pipeline completo de CI/CD con GitHub Actions, Terraform, Kubernetes y despliegue autom√°tico.</p>
                        <div class="links">
                            <a href="https://github.com/gabibenitezzz003/PORTFOLIO/actions" class="link">GitHub Actions</a>
                            <a href="http://localhost:8080/" class="link">Pipeline Status</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>‚öõÔ∏è Proyecto 9: Frontend React/TypeScript</h2>
                        <p>Frontend moderno con React 18, TypeScript, Material-UI, Redux Toolkit y arquitectura limpia.</p>
                        <div class="links">
                            <a href="http://localhost:3001/" class="link">Aplicaci√≥n React</a>
                            <a href="http://localhost:3001/docs" class="link">Documentaci√≥n</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>üöÄ Proyecto 10: Arquitectura Distribuida Kafka</h2>
                        <p>Arquitectura distribuida con Apache Kafka, Event Sourcing, CQRS y Saga Pattern.</p>
                        <div class="links">
                            <a href="http://localhost:8080/" class="link">Kafka UI</a>
                            <a href="http://localhost:8080/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>üêπ Proyecto 11: Sistema de Notificaciones Go</h2>
                        <p>Sistema de notificaciones en tiempo real con Go, WebSocket, Clean Architecture y alta concurrencia.</p>
                        <div class="links">
                            <a href="http://localhost:8082/" class="link">API Go</a>
                            <a href="http://localhost:8082/health" class="link">Health Check</a>
                        </div>
                    </div>
                    
                    <div class="project">
                        <h2>ü§ñ Proyecto 12: No-Code y Automatizaci√≥n</h2>
                        <p>Automatizaci√≥n de procesos con N8N, Zapier, Make.com y otras herramientas no-code para integraci√≥n de sistemas.</p>
                        <div class="links">
                            <a href="http://localhost:5678/" class="link">N8N Dashboard</a>
                            <a href="http://localhost:8080/" class="link">Webhook Testing</a>
                            <a href="http://localhost:3000/" class="link">Grafana Monitoring</a>
                        </div>
                    </div>
                    
                    <div class="tech">
                        <h3>üõ†Ô∏è Tecnolog√≠as Utilizadas</h3>
                        <div class="tech-list">
                            <span class="tech-item">Python</span>
                            <span class="tech-item">Java</span>
                            <span class="tech-item">Go</span>
                            <span class="tech-item">TypeScript</span>
                            <span class="tech-item">FastAPI</span>
                            <span class="tech-item">Spring Boot</span>
                            <span class="tech-item">React</span>
                            <span class="tech-item">PostgreSQL</span>
                            <span class="tech-item">MongoDB</span>
                            <span class="tech-item">Redis</span>
                            <span class="tech-item">Apache Kafka</span>
                            <span class="tech-item">Pandas</span>
                            <span class="tech-item">spaCy</span>
                            <span class="tech-item">NLTK</span>
                            <span class="tech-item">Apache Airflow</span>
                            <span class="tech-item">scikit-learn</span>
                            <span class="tech-item">TensorFlow</span>
                            <span class="tech-item">Docker</span>
                            <span class="tech-item">Kubernetes</span>
                            <span class="tech-item">Terraform</span>
                            <span class="tech-item">GitHub Actions</span>
                            <span class="tech-item">MLflow</span>
                            <span class="tech-item">Prometheus</span>
                            <span class="tech-item">Grafana</span>
                            <span class="tech-item">Jaeger</span>
                            <span class="tech-item">N8N</span>
                            <span class="tech-item">Zapier</span>
                            <span class="tech-item">Make.com</span>
                        </div>
                    </div>
                    
                    <div style="text-align: center; margin-top: 40px; color: #7f8c8d;">
                        <p>Desarrollado para GreenCode Software - Portfolio de Gabriel</p>
                        <p>Arquitectura Hexagonal | Clean Code | POO | Docker | Microservicios</p>
                    </div>
                </div>
            </body>
            </html>
            ';
            add_header Content-Type text/html;
        }
        
        # Proyecto 1: Sistema de Gesti√≥n de Datos
        location /proyecto1/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_proyecto1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Proyecto 3: Sistema de NLP
        location /proyecto3/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_nlp_proyecto3/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Proyecto 4: Apache Airflow
        location /airflow/ {
            limit_req zone=airflow burst=10 nodelay;
            proxy_pass http://airflow_webserver/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Proyecto 5: Sistema de Recomendaciones
        location /proyecto5/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://api_recomendaciones_proyecto5/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # MLflow
        location /mlflow/ {
            proxy_pass http://mlflow/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Grafana
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
    }
}

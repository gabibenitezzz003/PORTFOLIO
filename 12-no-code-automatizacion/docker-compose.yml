version: '3.8'

services:
  # N8N - Plataforma de automatizaci√≥n principal
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-automation
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Argentina/Buenos_Aires
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres-n8n
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n123
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows/n8n:/home/node/.n8n/workflows
      - ./configs:/home/node/.n8n/config
    depends_on:
      - postgres-n8n
      - redis-n8n
    networks:
      - no-code-network

  # PostgreSQL para N8N
  postgres-n8n:
    image: postgres:15-alpine
    container_name: postgres-n8n
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n123
    volumes:
      - postgres_n8n_data:/var/lib/postgresql/data
    networks:
      - no-code-network

  # Redis para N8N
  redis-n8n:
    image: redis:7-alpine
    container_name: redis-n8n
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_n8n_data:/data
    networks:
      - no-code-network

  # Webhook.site para testing
  webhook-site:
    image: webhooksite/webhook.site:latest
    container_name: webhook-site
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - WH_PORT=8080
    networks:
      - no-code-network

  # Nginx para proxy reverso
  nginx-no-code:
    image: nginx:alpine
    container_name: nginx-no-code
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - n8n
      - webhook-site
    networks:
      - no-code-network

  # Prometheus para monitoreo
  prometheus-no-code:
    image: prom/prometheus:latest
    container_name: prometheus-no-code
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_no_code_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - no-code-network

  # Grafana para dashboards
  grafana-no-code:
    image: grafana/grafana:latest
    container_name: grafana-no-code
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_no_code_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus-no-code
    networks:
      - no-code-network

volumes:
  n8n_data:
    driver: local
  postgres_n8n_data:
    driver: local
  redis_n8n_data:
    driver: local
  prometheus_no_code_data:
    driver: local
  grafana_no_code_data:
    driver: local

networks:
  no-code-network:
    driver: bridge
